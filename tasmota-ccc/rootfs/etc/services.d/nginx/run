#!/usr/bin/with-contenv bashio
# ==============================================================================
# Home Assistant Custom Add-on: Tasmota proxy and update
# Runs the Nginx daemon
# ==============================================================================

source /var/lib/tasmota-ccc/functions.sh

# Generate empty proxy authorization
if ! bashio::fs.file_exists "/data/credentials.json"; then
    echo "{\"devices\":[]}" > /data/credentials.json
fi

# Generate Ingress configuration
interface="$(bashio::addon.ip_address)"
port="$(bashio::addon.ingress_port)"
bashio::log.info "Running on ${interface}:${port}"
bashio::var.json \
    interface "${interface}" \
    port "^${port}" \
    | tempio \
        -template /etc/nginx/templates/nginx.gtpl \
        -out /etc/nginx/nginx.conf

# Generate Proxy configurations and static html
devices=$(get_tasmota_devices)
if (( $(echo "${devices}" | jq length) == 0 )); then
    cp /var/www/tasmota-ccc/templates/no_devices.html /var/www/tasmota-ccc/devices.html
else
    echo "<body><table align="center">" > /var/www/tasmota-ccc/devices.html
    echo "${devices}" | jq -rcM "sort_by(.name) | .[]" | while read device; do
        # id, available, name, model, version, area, url, mac
        eval "declare -A device_attributes=($(bashio::jq "${device}" 'to_entries | .[] | @sh "[\(.key)]=\(.value)"'))"

        if credentials=$(get_credentials "${device_attributes[id]}"); then
            username=$(bashio::jq "${credentials}" ".username")
            password=$(bashio::jq "${credentials}" ".password")
            encoded_credentials=$(echo -n "${username}:${password}" | base64)
            configured="true"
        else
            encoded_credentials="null"
            configured="false"
        fi

        bashio::log.info "Configuring device ${device_attributes[id]} ${device_attributes[name]}$([[ ${device_attributes[available]} == "true" ]] || echo " (unavailable)")$([[ ${configured} == "true" ]] || echo " (unconfigured)")"

        if [[ "${device_attributes[available]}" == "true" ]]; then
            bashio::var.json \
                id "${device_attributes[id]}" \
                url "${device_attributes[url]}" \
                credentials "${encoded_credentials}" \
                | tempio \
                    -template /etc/nginx/templates/device_proxy.gtpl \
                    -out /etc/nginx/locations/device_proxy_"${device_attributes[id]}".conf
        fi
        bashio::var.json \
            available "${device_attributes[available]}" \
            configured "${configured}" \
            id "${device_attributes[id]}" \
            name "${device_attributes[name]}" \
            area "${device_attributes[area]}" \
            model "${device_attributes[model]}" \
            version "${device_attributes[version]}" \
            | tempio \
                -template /var/www/tasmota-ccc/templates/device.gtpl \
                -out /tmp/device.html
        cat /tmp/device.html >> /var/www/tasmota-ccc/devices.html
    done
    echo "</table></body>" >> /var/www/tasmota-ccc/devices.html
fi

bashio::log.info "Starting NGinx..."
exec nginx -g "daemon off;"
